// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId             Int

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       Int
}

model VerificationToken {
  id         Int?     @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}


model User {
  id              Int         @id @default(autoincrement())
  email           String      @unique
  emailVerified   DateTime?
  rut             String?
  name            String?
  lastName        String?
  telephone       String?
  bio             String?
  image           String?
  role            Role        @default(USER)
  status          Status      @default(ACTIVE)

  shops           Shop[]   
  accounts        Account[]
  sessions        Session[]   

  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Shop {
  id            Int         @id @default(autoincrement())
  name          String
  email         String
  telephone     String
  bio           String?
  address       String?
  image         String?
  status        Status      @default(ACTIVE)

  products      Product[]  
  user          User        @relation(fields: [userId], references: [id])
  userId        Int

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Product {
  id              Int       @id @default(autoincrement())
  name            String
  price           Int
  description     String?
  quantity        Int?
  image           String?
  discountPercent Int       @default(0)

  orders        OrderProduct[]
  shop          Shop        @relation(fields: [shopId], references: [id])
  shopId        Int

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model OrderProduct {
  id            Int         @id @default(autoincrement())
  productQuantity  Int     @default(1)
  
  product       Product     @relation(fields: [productId], references: [id])
  productId     Int
  order         Order       @relation(fields: [orderId], references: [id])
  orderId       Int

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Order {
  id            Int         @id @default(autoincrement())
  status        Int         @default(0)         
  totalPrice    Int         @default(0)

  products      OrderProduct[]
  client        Client      @relation(fields: [clientId], references: [id])
  clientId      Int

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

model Client {
  id            Int         @id @default(autoincrement())
  rut           String
  name          String
  lastName      String
  telephone     String?
  email         String?      
  address       String?

  orders        Order[]     

  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

enum Role {
  USER
  PREMIUM
  ADMIN
}

enum Status {
  ACTIVE
  INACTIVE
  BLOCKED
}